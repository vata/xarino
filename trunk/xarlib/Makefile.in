# Makefile.in generated by automake 1.9.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#########################################################################
# LIBRARY SECTION
#########################################################################

# this is the XarLib library.
# it's name is used for all
# of the other Makefile.am variables
#noinst_LIBRARIES	= libXar.a




SOURCES = $(libXar_a_SOURCES) $(expandxar_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = expandxar$(EXEEXT)
subdir = xarlib
DIST_COMMON = $(pkginclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/Xar.pc.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES = Xar.pc
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(pkgincludedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libXar_a_AR = $(AR) $(ARFLAGS)
libXar_a_LIBADD =
am__objects_1 = libXar_a-ccfile.$(OBJEXT) libXar_a-ccmaths.$(OBJEXT) \
	libXar_a-ccpanose.$(OBJEXT) libXar_a-coord.$(OBJEXT) \
	libXar_a-cxfile.$(OBJEXT) libXar_a-cxfmap.$(OBJEXT) \
	libXar_a-cxfrec.$(OBJEXT) libXar_a-cxfrech.$(OBJEXT) \
	libXar_a-doccoord.$(OBJEXT) libXar_a-docrect.$(OBJEXT) \
	libXar_a-f16spec.$(OBJEXT) libXar_a-fixed16.$(OBJEXT) \
	libXar_a-fixed.$(OBJEXT) libXar_a-fttyplis.$(OBJEXT) \
	libXar_a-list.$(OBJEXT) libXar_a-listitem.$(OBJEXT) \
	libXar_a-matrix.$(OBJEXT) libXar_a-pathproc.$(OBJEXT) \
	libXar_a-paths.$(OBJEXT) libXar_a-pathutil.$(OBJEXT) \
	libXar_a-rechcomp.$(OBJEXT) libXar_a-vector.$(OBJEXT) \
	libXar_a-xlong.$(OBJEXT) libXar_a-zdeflate.$(OBJEXT) \
	libXar_a-zdftrees.$(OBJEXT) libXar_a-ziftrees.$(OBJEXT) \
	libXar_a-zinflate.$(OBJEXT) libXar_a-zstream.$(OBJEXT) \
	libXar_a-basestr.$(OBJEXT) libXar_a-camresource.$(OBJEXT) \
	libXar_a-ccobject.$(OBJEXT) libXar_a-errors.$(OBJEXT) \
	libXar_a-filehndl.$(OBJEXT) libXar_a-filesize.$(OBJEXT) \
	libXar_a-fixmem.$(OBJEXT) libXar_a-fixst128.$(OBJEXT) \
	libXar_a-fixst256.$(OBJEXT) libXar_a-fixstr16.$(OBJEXT) \
	libXar_a-fixstr32.$(OBJEXT) libXar_a-fixstr64.$(OBJEXT) \
	libXar_a-fixstr8.$(OBJEXT) libXar_a-handles.$(OBJEXT) \
	libXar_a-makemsg.$(OBJEXT) libXar_a-memblk.$(OBJEXT) \
	libXar_a-cammemory.$(OBJEXT) libXar_a-pathname.$(OBJEXT) \
	libXar_a-unicdman.$(OBJEXT) libXar_a-varstr.$(OBJEXT) \
	libXar_a-camelot.$(OBJEXT) libXar_a-ensure.$(OBJEXT) \
	libXar_a-xarlib.$(OBJEXT)
am__objects_2 =
am_libXar_a_OBJECTS = $(am__objects_1) $(am__objects_2)
libXar_a_OBJECTS = $(am_libXar_a_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_expandxar_OBJECTS = expandxar-expandxar.$(OBJEXT)
expandxar_OBJECTS = $(am_expandxar_OBJECTS)
am__DEPENDENCIES_1 =
expandxar_DEPENDENCIES = libXar.a $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(libXar_a_SOURCES) $(expandxar_SOURCES)
DIST_SOURCES = $(libXar_a_SOURCES) $(expandxar_SOURCES)
pkgconfigDATA_INSTALL = $(INSTALL_DATA)
DATA = $(noinst_DATA) $(pkgconfig_DATA)
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(pkginclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

# Manually set the package include dir, else we install libraries
# in /usr/include/XaraLX which is not a good thing
pkgincludedir = $(includedir)/xarlib
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BINRELOC_CFLAGS = @BINRELOC_CFLAGS@
BINRELOC_LIBS = @BINRELOC_LIBS@
BUILDRESFLAGS = @BUILDRESFLAGS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CDRAW_LIB_DIR = @CDRAW_LIB_DIR@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DARWIN_LINK_FALSE = @DARWIN_LINK_FALSE@
DARWIN_LINK_TRUE = @DARWIN_LINK_TRUE@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FILTERS_ENABLE_FALSE = @FILTERS_ENABLE_FALSE@
FILTERS_ENABLE_TRUE = @FILTERS_ENABLE_TRUE@
GMSGFMT = @GMSGFMT@
GTK_CFLAGS = @GTK_CFLAGS@
GTK_LIBS = @GTK_LIBS@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTERNATIONAL_ENABLE_FALSE = @INTERNATIONAL_ENABLE_FALSE@
INTERNATIONAL_ENABLE_TRUE = @INTERNATIONAL_ENABLE_TRUE@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBXML2_LIBS = @LIBXML2_LIBS@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
MSGMERGE = @MSGMERGE@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PANGOX_CFLAGS = @PANGOX_CFLAGS@
PANGOX_LIBS = @PANGOX_LIBS@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PODIR = @PODIR@
POSUB = @POSUB@
PRECOMPILE_ENABLE_FALSE = @PRECOMPILE_ENABLE_FALSE@
PRECOMPILE_ENABLE_TRUE = @PRECOMPILE_ENABLE_TRUE@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STATIC_ENABLE_FALSE = @STATIC_ENABLE_FALSE@
STATIC_ENABLE_TRUE = @STATIC_ENABLE_TRUE@
STRIP = @STRIP@
SVNVERSION_ENABLE_FALSE = @SVNVERSION_ENABLE_FALSE@
SVNVERSION_ENABLE_TRUE = @SVNVERSION_ENABLE_TRUE@
TOPDIR = @TOPDIR@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WXRC = @WXRC@
WX_LIBS = @WX_LIBS@
WX_LIBS2 = @WX_LIBS2@
XARALANGUAGE = @XARALANGUAGE@
XARALXCPPFLAGS = @XARALXCPPFLAGS@
XARALXCXXFLAGS = @XARALXCXXFLAGS@
XARLIB_ENABLE_FALSE = @XARLIB_ENABLE_FALSE@
XARLIB_ENABLE_TRUE = @XARLIB_ENABLE_TRUE@
XGETTEXT = @XGETTEXT@
XRCINCLUDE = @XRCINCLUDE@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
ac_prefix_program = @ac_prefix_program@
ac_pt_PKG_CONFIG = @ac_pt_PKG_CONFIG@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@

# Main target
lib_LIBRARIES = libXar.a

# have to use the -I flags to point at the three directories concerned as I
# can't get this file to compile pretranslated source files.
XARLIBFLAGS = \
	-DUSE_NATIVE_XLONG -DBUILDSHADOWS -DOLD_MATRIX_TRANSFORMATIONS \
	-DVECTOR_STROKING -DEXCLUDE_FROM_XARLIB -DNEW_SHADOW_RENDER -DNO_XARACMS \
	-DNEW_FEATURES -DSHOWPORTNOTE -DDO_EXPORT \
	-Iinclude -I$(TOPDIR)/PreComp -I$(TOPDIR)/Kernel -I$(TOPDIR)/wxOil -I$(TOPDIR)/GDraw


# make sure this does NOT have our include files in the path
# xarlib needs to be first
libXar_a_CXXFLAGS = $(XARALXCXXFLAGS) $(XARLIBFLAGS)

# Ensure these all begin with "../<directory>/" even if in the current directory
XARLIBCPP = \
	../Kernel/ccfile.cpp \
	../Kernel/ccmaths.cpp \
	../Kernel/ccpanose.cpp \
	../Kernel/coord.cpp \
	../Kernel/cxfile.cpp \
	../Kernel/cxfmap.cpp \
	../Kernel/cxfrec.cpp \
	../Kernel/cxfrech.cpp \
	../Kernel/doccoord.cpp \
	../Kernel/docrect.cpp \
	../Kernel/f16spec.cpp \
	../Kernel/fixed16.cpp \
	../Kernel/fixed.cpp \
	../Kernel/fttyplis.cpp \
	../Kernel/list.cpp \
	../Kernel/listitem.cpp \
	../Kernel/matrix.cpp \
	../Kernel/pathproc.cpp \
	../Kernel/paths.cpp \
	../Kernel/pathutil.cpp \
	../Kernel/rechcomp.cpp \
	../Kernel/vector.cpp \
	../Kernel/xlong.cpp \
	../Kernel/zdeflate.cpp \
	../Kernel/zdftrees.cpp \
	../Kernel/ziftrees.cpp \
	../Kernel/zinflate.cpp \
	../Kernel/zstream.cpp \
	../wxOil/basestr.cpp \
	../wxOil/camresource.cpp \
	../wxOil/ccobject.cpp \
	../wxOil/errors.cpp \
	../wxOil/filehndl.cpp \
	../wxOil/filesize.cpp \
	../wxOil/fixmem.cpp \
	../wxOil/fixst128.cpp \
	../wxOil/fixst256.cpp \
	../wxOil/fixstr16.cpp \
	../wxOil/fixstr32.cpp \
	../wxOil/fixstr64.cpp \
	../wxOil/fixstr8.cpp \
	../wxOil/handles.cpp \
	../wxOil/makemsg.cpp \
	../wxOil/memblk.cpp \
	../wxOil/cammemory.cpp \
	../wxOil/pathname.cpp \
	../wxOil/unicdman.cpp \
	../wxOil/varstr.cpp \
	../xarlib/camelot.cpp \
	../xarlib/ensure.cpp \
	../xarlib/xarlib.cpp


# Ensure these all begin with "../<directory>/" even if in the current directory
XARLIBHEADERS = \
	../PreComp/camtypes.h \
	../wxOil/basestr.h \
	../wxOil/camresource.h \
	../wxOil/camstring.h \
	../wxOil/ccobject.h \
	../wxOil/compatdef.h \
	../wxOil/errors.h \
	../wxOil/exception.h \
	../wxOil/fixmem.h \
	../wxOil/fixst128.h \
	../wxOil/fixst256.h \
	../wxOil/fixstr16.h \
	../wxOil/fixstr32.h \
	../wxOil/fixstr64.h \
	../wxOil/fixstr8.h \
	../wxOil/handles.h \
	../wxOil/hardwaremanager.h \
	../wxOil/memblk.h \
	../wxOil/memdebug.h \
	../wxOil/cammemory.h \
	../wxOil/mfccontainer.h \
	../wxOil/pathname.h \
	../wxOil/stdwx.h \
	../wxOil/svnversion.h \
	../wxOil/unicdman.h \
	../wxOil/varstr.h \
	../GDraw/gconsts.h \
	../Kernel/attr.h \
	../Kernel/ccfile.h \
	../Kernel/ccmaths.h \
	../Kernel/ccpanose.h \
	../Kernel/coord.h \
	../Kernel/cxfarrow.h \
	../Kernel/cxfcols.h \
	../Kernel/cxfdash.h \
	../Kernel/cxfdefs.h \
	../Kernel/cxfile.h \
	../Kernel/cxfmap.h \
	../Kernel/cxfrec.h \
	../Kernel/cxfrech.h \
	../Kernel/cxftags.h \
	../Kernel/doccoord.h \
	../Kernel/docrect.h \
	../Kernel/f16spec.h \
	../Kernel/fixed16.h \
	../Kernel/fixed.h \
	../Kernel/fttyplis.h \
	../Kernel/list.h \
	../Kernel/listitem.h \
	../Kernel/macros.h \
	../Kernel/matrix.h \
	../Kernel/pathproc.h \
	../Kernel/paths.h \
	../Kernel/pathtype.h \
	../Kernel/pathutil.h \
	../Kernel/rechcomp.h \
	../Kernel/taglists.h \
	../Kernel/vector.h \
	../Kernel/xlong.h \
	../Kernel/zdeflate.h \
	../Kernel/zinflate.h \
	../Kernel/zlib.h \
	../Kernel/zstream.h \
	../Kernel/zutil.h \
	../xarlib/camelot.h \
	../xarlib/ensure.h \
	../xarlib/xarlib.h


# These ones not got from TOPDIR
BUILTXARLIBHEADERS = ../wxOil/svnversion.h
INSTHEADERS = $(addprefix include/xarlib/, $(notdir $(XARLIBHEADERS)) )
INSTCPP = $(notdir $(XARLIBCPP) )
libXar_a_SOURCES = $(XARLIBCPP) $(INSTHEADERS)
# Only build the static library until we have an API/ABI nailed down
#libXar_a_LIBADD = $(WX_LIBS2)
pkginclude_HEADERS = $(INSTHEADERS)
BUILT_SOURCES = $(INSTHEADERS) svnversion.h
#BUILT_SOURCES = $(INSTHEADERS) $(INSTCPP)

# Note this is OUR svnversion.h
MOSTLYCLEANFILES = $(INSTHEADERS) svnversion.h
#MOSTLYCLEANFILES = $(INSTHEADERS) $(INSTCPP)

# Insert an additional dependency to get the headers and cpp files built
noinst_DATA = $(INSTHEADERS)
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = Xar.pc

# Unser this as it upsets CXXLINK which causes linking to fail for no apparent reason
AM_CXXFLAGS = 
expandxar_SOURCES = ExpandXar/expandxar.cpp
expandxar_LDADD = libXar.a $(WX_LIBS)
expandxar_CXXFLAGS = $(XARALXCXXFLAGS) $(XARLIBFLAGS)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  xarlib/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  xarlib/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
Xar.pc: $(top_builddir)/config.status $(srcdir)/Xar.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libXar.a: $(libXar_a_OBJECTS) $(libXar_a_DEPENDENCIES) 
	-rm -f libXar.a
	$(libXar_a_AR) libXar.a $(libXar_a_OBJECTS) $(libXar_a_LIBADD)
	$(RANLIB) libXar.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
expandxar$(EXEEXT): $(expandxar_OBJECTS) $(expandxar_DEPENDENCIES) 
	@rm -f expandxar$(EXEEXT)
	$(CXXLINK) $(expandxar_LDFLAGS) $(expandxar_OBJECTS) $(expandxar_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/expandxar-expandxar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-basestr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-camelot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-cammemory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-camresource.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-ccfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-ccmaths.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-ccobject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-ccpanose.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-coord.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-cxfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-cxfmap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-cxfrec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-cxfrech.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-doccoord.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-docrect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-ensure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-errors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-f16spec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-filehndl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-filesize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-fixed.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-fixed16.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-fixmem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-fixst128.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-fixst256.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-fixstr16.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-fixstr32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-fixstr64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-fixstr8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-fttyplis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-handles.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-listitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-makemsg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-memblk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-pathname.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-pathproc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-paths.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-pathutil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-rechcomp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-unicdman.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-varstr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-vector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-xarlib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-xlong.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-zdeflate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-zdftrees.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-ziftrees.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-zinflate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libXar_a-zstream.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libXar_a-ccfile.o: ../Kernel/ccfile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-ccfile.o -MD -MP -MF "$(DEPDIR)/libXar_a-ccfile.Tpo" -c -o libXar_a-ccfile.o `test -f '../Kernel/ccfile.cpp' || echo '$(srcdir)/'`../Kernel/ccfile.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-ccfile.Tpo" "$(DEPDIR)/libXar_a-ccfile.Po"; else rm -f "$(DEPDIR)/libXar_a-ccfile.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/ccfile.cpp' object='libXar_a-ccfile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-ccfile.o `test -f '../Kernel/ccfile.cpp' || echo '$(srcdir)/'`../Kernel/ccfile.cpp

libXar_a-ccfile.obj: ../Kernel/ccfile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-ccfile.obj -MD -MP -MF "$(DEPDIR)/libXar_a-ccfile.Tpo" -c -o libXar_a-ccfile.obj `if test -f '../Kernel/ccfile.cpp'; then $(CYGPATH_W) '../Kernel/ccfile.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/ccfile.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-ccfile.Tpo" "$(DEPDIR)/libXar_a-ccfile.Po"; else rm -f "$(DEPDIR)/libXar_a-ccfile.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/ccfile.cpp' object='libXar_a-ccfile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-ccfile.obj `if test -f '../Kernel/ccfile.cpp'; then $(CYGPATH_W) '../Kernel/ccfile.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/ccfile.cpp'; fi`

libXar_a-ccmaths.o: ../Kernel/ccmaths.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-ccmaths.o -MD -MP -MF "$(DEPDIR)/libXar_a-ccmaths.Tpo" -c -o libXar_a-ccmaths.o `test -f '../Kernel/ccmaths.cpp' || echo '$(srcdir)/'`../Kernel/ccmaths.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-ccmaths.Tpo" "$(DEPDIR)/libXar_a-ccmaths.Po"; else rm -f "$(DEPDIR)/libXar_a-ccmaths.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/ccmaths.cpp' object='libXar_a-ccmaths.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-ccmaths.o `test -f '../Kernel/ccmaths.cpp' || echo '$(srcdir)/'`../Kernel/ccmaths.cpp

libXar_a-ccmaths.obj: ../Kernel/ccmaths.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-ccmaths.obj -MD -MP -MF "$(DEPDIR)/libXar_a-ccmaths.Tpo" -c -o libXar_a-ccmaths.obj `if test -f '../Kernel/ccmaths.cpp'; then $(CYGPATH_W) '../Kernel/ccmaths.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/ccmaths.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-ccmaths.Tpo" "$(DEPDIR)/libXar_a-ccmaths.Po"; else rm -f "$(DEPDIR)/libXar_a-ccmaths.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/ccmaths.cpp' object='libXar_a-ccmaths.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-ccmaths.obj `if test -f '../Kernel/ccmaths.cpp'; then $(CYGPATH_W) '../Kernel/ccmaths.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/ccmaths.cpp'; fi`

libXar_a-ccpanose.o: ../Kernel/ccpanose.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-ccpanose.o -MD -MP -MF "$(DEPDIR)/libXar_a-ccpanose.Tpo" -c -o libXar_a-ccpanose.o `test -f '../Kernel/ccpanose.cpp' || echo '$(srcdir)/'`../Kernel/ccpanose.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-ccpanose.Tpo" "$(DEPDIR)/libXar_a-ccpanose.Po"; else rm -f "$(DEPDIR)/libXar_a-ccpanose.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/ccpanose.cpp' object='libXar_a-ccpanose.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-ccpanose.o `test -f '../Kernel/ccpanose.cpp' || echo '$(srcdir)/'`../Kernel/ccpanose.cpp

libXar_a-ccpanose.obj: ../Kernel/ccpanose.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-ccpanose.obj -MD -MP -MF "$(DEPDIR)/libXar_a-ccpanose.Tpo" -c -o libXar_a-ccpanose.obj `if test -f '../Kernel/ccpanose.cpp'; then $(CYGPATH_W) '../Kernel/ccpanose.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/ccpanose.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-ccpanose.Tpo" "$(DEPDIR)/libXar_a-ccpanose.Po"; else rm -f "$(DEPDIR)/libXar_a-ccpanose.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/ccpanose.cpp' object='libXar_a-ccpanose.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-ccpanose.obj `if test -f '../Kernel/ccpanose.cpp'; then $(CYGPATH_W) '../Kernel/ccpanose.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/ccpanose.cpp'; fi`

libXar_a-coord.o: ../Kernel/coord.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-coord.o -MD -MP -MF "$(DEPDIR)/libXar_a-coord.Tpo" -c -o libXar_a-coord.o `test -f '../Kernel/coord.cpp' || echo '$(srcdir)/'`../Kernel/coord.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-coord.Tpo" "$(DEPDIR)/libXar_a-coord.Po"; else rm -f "$(DEPDIR)/libXar_a-coord.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/coord.cpp' object='libXar_a-coord.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-coord.o `test -f '../Kernel/coord.cpp' || echo '$(srcdir)/'`../Kernel/coord.cpp

libXar_a-coord.obj: ../Kernel/coord.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-coord.obj -MD -MP -MF "$(DEPDIR)/libXar_a-coord.Tpo" -c -o libXar_a-coord.obj `if test -f '../Kernel/coord.cpp'; then $(CYGPATH_W) '../Kernel/coord.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/coord.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-coord.Tpo" "$(DEPDIR)/libXar_a-coord.Po"; else rm -f "$(DEPDIR)/libXar_a-coord.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/coord.cpp' object='libXar_a-coord.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-coord.obj `if test -f '../Kernel/coord.cpp'; then $(CYGPATH_W) '../Kernel/coord.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/coord.cpp'; fi`

libXar_a-cxfile.o: ../Kernel/cxfile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-cxfile.o -MD -MP -MF "$(DEPDIR)/libXar_a-cxfile.Tpo" -c -o libXar_a-cxfile.o `test -f '../Kernel/cxfile.cpp' || echo '$(srcdir)/'`../Kernel/cxfile.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-cxfile.Tpo" "$(DEPDIR)/libXar_a-cxfile.Po"; else rm -f "$(DEPDIR)/libXar_a-cxfile.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/cxfile.cpp' object='libXar_a-cxfile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-cxfile.o `test -f '../Kernel/cxfile.cpp' || echo '$(srcdir)/'`../Kernel/cxfile.cpp

libXar_a-cxfile.obj: ../Kernel/cxfile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-cxfile.obj -MD -MP -MF "$(DEPDIR)/libXar_a-cxfile.Tpo" -c -o libXar_a-cxfile.obj `if test -f '../Kernel/cxfile.cpp'; then $(CYGPATH_W) '../Kernel/cxfile.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/cxfile.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-cxfile.Tpo" "$(DEPDIR)/libXar_a-cxfile.Po"; else rm -f "$(DEPDIR)/libXar_a-cxfile.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/cxfile.cpp' object='libXar_a-cxfile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-cxfile.obj `if test -f '../Kernel/cxfile.cpp'; then $(CYGPATH_W) '../Kernel/cxfile.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/cxfile.cpp'; fi`

libXar_a-cxfmap.o: ../Kernel/cxfmap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-cxfmap.o -MD -MP -MF "$(DEPDIR)/libXar_a-cxfmap.Tpo" -c -o libXar_a-cxfmap.o `test -f '../Kernel/cxfmap.cpp' || echo '$(srcdir)/'`../Kernel/cxfmap.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-cxfmap.Tpo" "$(DEPDIR)/libXar_a-cxfmap.Po"; else rm -f "$(DEPDIR)/libXar_a-cxfmap.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/cxfmap.cpp' object='libXar_a-cxfmap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-cxfmap.o `test -f '../Kernel/cxfmap.cpp' || echo '$(srcdir)/'`../Kernel/cxfmap.cpp

libXar_a-cxfmap.obj: ../Kernel/cxfmap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-cxfmap.obj -MD -MP -MF "$(DEPDIR)/libXar_a-cxfmap.Tpo" -c -o libXar_a-cxfmap.obj `if test -f '../Kernel/cxfmap.cpp'; then $(CYGPATH_W) '../Kernel/cxfmap.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/cxfmap.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-cxfmap.Tpo" "$(DEPDIR)/libXar_a-cxfmap.Po"; else rm -f "$(DEPDIR)/libXar_a-cxfmap.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/cxfmap.cpp' object='libXar_a-cxfmap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-cxfmap.obj `if test -f '../Kernel/cxfmap.cpp'; then $(CYGPATH_W) '../Kernel/cxfmap.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/cxfmap.cpp'; fi`

libXar_a-cxfrec.o: ../Kernel/cxfrec.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-cxfrec.o -MD -MP -MF "$(DEPDIR)/libXar_a-cxfrec.Tpo" -c -o libXar_a-cxfrec.o `test -f '../Kernel/cxfrec.cpp' || echo '$(srcdir)/'`../Kernel/cxfrec.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-cxfrec.Tpo" "$(DEPDIR)/libXar_a-cxfrec.Po"; else rm -f "$(DEPDIR)/libXar_a-cxfrec.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/cxfrec.cpp' object='libXar_a-cxfrec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-cxfrec.o `test -f '../Kernel/cxfrec.cpp' || echo '$(srcdir)/'`../Kernel/cxfrec.cpp

libXar_a-cxfrec.obj: ../Kernel/cxfrec.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-cxfrec.obj -MD -MP -MF "$(DEPDIR)/libXar_a-cxfrec.Tpo" -c -o libXar_a-cxfrec.obj `if test -f '../Kernel/cxfrec.cpp'; then $(CYGPATH_W) '../Kernel/cxfrec.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/cxfrec.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-cxfrec.Tpo" "$(DEPDIR)/libXar_a-cxfrec.Po"; else rm -f "$(DEPDIR)/libXar_a-cxfrec.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/cxfrec.cpp' object='libXar_a-cxfrec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-cxfrec.obj `if test -f '../Kernel/cxfrec.cpp'; then $(CYGPATH_W) '../Kernel/cxfrec.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/cxfrec.cpp'; fi`

libXar_a-cxfrech.o: ../Kernel/cxfrech.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-cxfrech.o -MD -MP -MF "$(DEPDIR)/libXar_a-cxfrech.Tpo" -c -o libXar_a-cxfrech.o `test -f '../Kernel/cxfrech.cpp' || echo '$(srcdir)/'`../Kernel/cxfrech.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-cxfrech.Tpo" "$(DEPDIR)/libXar_a-cxfrech.Po"; else rm -f "$(DEPDIR)/libXar_a-cxfrech.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/cxfrech.cpp' object='libXar_a-cxfrech.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-cxfrech.o `test -f '../Kernel/cxfrech.cpp' || echo '$(srcdir)/'`../Kernel/cxfrech.cpp

libXar_a-cxfrech.obj: ../Kernel/cxfrech.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-cxfrech.obj -MD -MP -MF "$(DEPDIR)/libXar_a-cxfrech.Tpo" -c -o libXar_a-cxfrech.obj `if test -f '../Kernel/cxfrech.cpp'; then $(CYGPATH_W) '../Kernel/cxfrech.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/cxfrech.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-cxfrech.Tpo" "$(DEPDIR)/libXar_a-cxfrech.Po"; else rm -f "$(DEPDIR)/libXar_a-cxfrech.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/cxfrech.cpp' object='libXar_a-cxfrech.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-cxfrech.obj `if test -f '../Kernel/cxfrech.cpp'; then $(CYGPATH_W) '../Kernel/cxfrech.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/cxfrech.cpp'; fi`

libXar_a-doccoord.o: ../Kernel/doccoord.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-doccoord.o -MD -MP -MF "$(DEPDIR)/libXar_a-doccoord.Tpo" -c -o libXar_a-doccoord.o `test -f '../Kernel/doccoord.cpp' || echo '$(srcdir)/'`../Kernel/doccoord.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-doccoord.Tpo" "$(DEPDIR)/libXar_a-doccoord.Po"; else rm -f "$(DEPDIR)/libXar_a-doccoord.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/doccoord.cpp' object='libXar_a-doccoord.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-doccoord.o `test -f '../Kernel/doccoord.cpp' || echo '$(srcdir)/'`../Kernel/doccoord.cpp

libXar_a-doccoord.obj: ../Kernel/doccoord.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-doccoord.obj -MD -MP -MF "$(DEPDIR)/libXar_a-doccoord.Tpo" -c -o libXar_a-doccoord.obj `if test -f '../Kernel/doccoord.cpp'; then $(CYGPATH_W) '../Kernel/doccoord.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/doccoord.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-doccoord.Tpo" "$(DEPDIR)/libXar_a-doccoord.Po"; else rm -f "$(DEPDIR)/libXar_a-doccoord.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/doccoord.cpp' object='libXar_a-doccoord.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-doccoord.obj `if test -f '../Kernel/doccoord.cpp'; then $(CYGPATH_W) '../Kernel/doccoord.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/doccoord.cpp'; fi`

libXar_a-docrect.o: ../Kernel/docrect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-docrect.o -MD -MP -MF "$(DEPDIR)/libXar_a-docrect.Tpo" -c -o libXar_a-docrect.o `test -f '../Kernel/docrect.cpp' || echo '$(srcdir)/'`../Kernel/docrect.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-docrect.Tpo" "$(DEPDIR)/libXar_a-docrect.Po"; else rm -f "$(DEPDIR)/libXar_a-docrect.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/docrect.cpp' object='libXar_a-docrect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-docrect.o `test -f '../Kernel/docrect.cpp' || echo '$(srcdir)/'`../Kernel/docrect.cpp

libXar_a-docrect.obj: ../Kernel/docrect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-docrect.obj -MD -MP -MF "$(DEPDIR)/libXar_a-docrect.Tpo" -c -o libXar_a-docrect.obj `if test -f '../Kernel/docrect.cpp'; then $(CYGPATH_W) '../Kernel/docrect.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/docrect.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-docrect.Tpo" "$(DEPDIR)/libXar_a-docrect.Po"; else rm -f "$(DEPDIR)/libXar_a-docrect.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/docrect.cpp' object='libXar_a-docrect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-docrect.obj `if test -f '../Kernel/docrect.cpp'; then $(CYGPATH_W) '../Kernel/docrect.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/docrect.cpp'; fi`

libXar_a-f16spec.o: ../Kernel/f16spec.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-f16spec.o -MD -MP -MF "$(DEPDIR)/libXar_a-f16spec.Tpo" -c -o libXar_a-f16spec.o `test -f '../Kernel/f16spec.cpp' || echo '$(srcdir)/'`../Kernel/f16spec.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-f16spec.Tpo" "$(DEPDIR)/libXar_a-f16spec.Po"; else rm -f "$(DEPDIR)/libXar_a-f16spec.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/f16spec.cpp' object='libXar_a-f16spec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-f16spec.o `test -f '../Kernel/f16spec.cpp' || echo '$(srcdir)/'`../Kernel/f16spec.cpp

libXar_a-f16spec.obj: ../Kernel/f16spec.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-f16spec.obj -MD -MP -MF "$(DEPDIR)/libXar_a-f16spec.Tpo" -c -o libXar_a-f16spec.obj `if test -f '../Kernel/f16spec.cpp'; then $(CYGPATH_W) '../Kernel/f16spec.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/f16spec.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-f16spec.Tpo" "$(DEPDIR)/libXar_a-f16spec.Po"; else rm -f "$(DEPDIR)/libXar_a-f16spec.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/f16spec.cpp' object='libXar_a-f16spec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-f16spec.obj `if test -f '../Kernel/f16spec.cpp'; then $(CYGPATH_W) '../Kernel/f16spec.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/f16spec.cpp'; fi`

libXar_a-fixed16.o: ../Kernel/fixed16.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixed16.o -MD -MP -MF "$(DEPDIR)/libXar_a-fixed16.Tpo" -c -o libXar_a-fixed16.o `test -f '../Kernel/fixed16.cpp' || echo '$(srcdir)/'`../Kernel/fixed16.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixed16.Tpo" "$(DEPDIR)/libXar_a-fixed16.Po"; else rm -f "$(DEPDIR)/libXar_a-fixed16.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/fixed16.cpp' object='libXar_a-fixed16.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixed16.o `test -f '../Kernel/fixed16.cpp' || echo '$(srcdir)/'`../Kernel/fixed16.cpp

libXar_a-fixed16.obj: ../Kernel/fixed16.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixed16.obj -MD -MP -MF "$(DEPDIR)/libXar_a-fixed16.Tpo" -c -o libXar_a-fixed16.obj `if test -f '../Kernel/fixed16.cpp'; then $(CYGPATH_W) '../Kernel/fixed16.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/fixed16.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixed16.Tpo" "$(DEPDIR)/libXar_a-fixed16.Po"; else rm -f "$(DEPDIR)/libXar_a-fixed16.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/fixed16.cpp' object='libXar_a-fixed16.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixed16.obj `if test -f '../Kernel/fixed16.cpp'; then $(CYGPATH_W) '../Kernel/fixed16.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/fixed16.cpp'; fi`

libXar_a-fixed.o: ../Kernel/fixed.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixed.o -MD -MP -MF "$(DEPDIR)/libXar_a-fixed.Tpo" -c -o libXar_a-fixed.o `test -f '../Kernel/fixed.cpp' || echo '$(srcdir)/'`../Kernel/fixed.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixed.Tpo" "$(DEPDIR)/libXar_a-fixed.Po"; else rm -f "$(DEPDIR)/libXar_a-fixed.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/fixed.cpp' object='libXar_a-fixed.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixed.o `test -f '../Kernel/fixed.cpp' || echo '$(srcdir)/'`../Kernel/fixed.cpp

libXar_a-fixed.obj: ../Kernel/fixed.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixed.obj -MD -MP -MF "$(DEPDIR)/libXar_a-fixed.Tpo" -c -o libXar_a-fixed.obj `if test -f '../Kernel/fixed.cpp'; then $(CYGPATH_W) '../Kernel/fixed.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/fixed.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixed.Tpo" "$(DEPDIR)/libXar_a-fixed.Po"; else rm -f "$(DEPDIR)/libXar_a-fixed.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/fixed.cpp' object='libXar_a-fixed.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixed.obj `if test -f '../Kernel/fixed.cpp'; then $(CYGPATH_W) '../Kernel/fixed.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/fixed.cpp'; fi`

libXar_a-fttyplis.o: ../Kernel/fttyplis.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fttyplis.o -MD -MP -MF "$(DEPDIR)/libXar_a-fttyplis.Tpo" -c -o libXar_a-fttyplis.o `test -f '../Kernel/fttyplis.cpp' || echo '$(srcdir)/'`../Kernel/fttyplis.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fttyplis.Tpo" "$(DEPDIR)/libXar_a-fttyplis.Po"; else rm -f "$(DEPDIR)/libXar_a-fttyplis.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/fttyplis.cpp' object='libXar_a-fttyplis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fttyplis.o `test -f '../Kernel/fttyplis.cpp' || echo '$(srcdir)/'`../Kernel/fttyplis.cpp

libXar_a-fttyplis.obj: ../Kernel/fttyplis.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fttyplis.obj -MD -MP -MF "$(DEPDIR)/libXar_a-fttyplis.Tpo" -c -o libXar_a-fttyplis.obj `if test -f '../Kernel/fttyplis.cpp'; then $(CYGPATH_W) '../Kernel/fttyplis.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/fttyplis.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fttyplis.Tpo" "$(DEPDIR)/libXar_a-fttyplis.Po"; else rm -f "$(DEPDIR)/libXar_a-fttyplis.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/fttyplis.cpp' object='libXar_a-fttyplis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fttyplis.obj `if test -f '../Kernel/fttyplis.cpp'; then $(CYGPATH_W) '../Kernel/fttyplis.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/fttyplis.cpp'; fi`

libXar_a-list.o: ../Kernel/list.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-list.o -MD -MP -MF "$(DEPDIR)/libXar_a-list.Tpo" -c -o libXar_a-list.o `test -f '../Kernel/list.cpp' || echo '$(srcdir)/'`../Kernel/list.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-list.Tpo" "$(DEPDIR)/libXar_a-list.Po"; else rm -f "$(DEPDIR)/libXar_a-list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/list.cpp' object='libXar_a-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-list.o `test -f '../Kernel/list.cpp' || echo '$(srcdir)/'`../Kernel/list.cpp

libXar_a-list.obj: ../Kernel/list.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-list.obj -MD -MP -MF "$(DEPDIR)/libXar_a-list.Tpo" -c -o libXar_a-list.obj `if test -f '../Kernel/list.cpp'; then $(CYGPATH_W) '../Kernel/list.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/list.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-list.Tpo" "$(DEPDIR)/libXar_a-list.Po"; else rm -f "$(DEPDIR)/libXar_a-list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/list.cpp' object='libXar_a-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-list.obj `if test -f '../Kernel/list.cpp'; then $(CYGPATH_W) '../Kernel/list.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/list.cpp'; fi`

libXar_a-listitem.o: ../Kernel/listitem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-listitem.o -MD -MP -MF "$(DEPDIR)/libXar_a-listitem.Tpo" -c -o libXar_a-listitem.o `test -f '../Kernel/listitem.cpp' || echo '$(srcdir)/'`../Kernel/listitem.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-listitem.Tpo" "$(DEPDIR)/libXar_a-listitem.Po"; else rm -f "$(DEPDIR)/libXar_a-listitem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/listitem.cpp' object='libXar_a-listitem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-listitem.o `test -f '../Kernel/listitem.cpp' || echo '$(srcdir)/'`../Kernel/listitem.cpp

libXar_a-listitem.obj: ../Kernel/listitem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-listitem.obj -MD -MP -MF "$(DEPDIR)/libXar_a-listitem.Tpo" -c -o libXar_a-listitem.obj `if test -f '../Kernel/listitem.cpp'; then $(CYGPATH_W) '../Kernel/listitem.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/listitem.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-listitem.Tpo" "$(DEPDIR)/libXar_a-listitem.Po"; else rm -f "$(DEPDIR)/libXar_a-listitem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/listitem.cpp' object='libXar_a-listitem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-listitem.obj `if test -f '../Kernel/listitem.cpp'; then $(CYGPATH_W) '../Kernel/listitem.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/listitem.cpp'; fi`

libXar_a-matrix.o: ../Kernel/matrix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-matrix.o -MD -MP -MF "$(DEPDIR)/libXar_a-matrix.Tpo" -c -o libXar_a-matrix.o `test -f '../Kernel/matrix.cpp' || echo '$(srcdir)/'`../Kernel/matrix.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-matrix.Tpo" "$(DEPDIR)/libXar_a-matrix.Po"; else rm -f "$(DEPDIR)/libXar_a-matrix.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/matrix.cpp' object='libXar_a-matrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-matrix.o `test -f '../Kernel/matrix.cpp' || echo '$(srcdir)/'`../Kernel/matrix.cpp

libXar_a-matrix.obj: ../Kernel/matrix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-matrix.obj -MD -MP -MF "$(DEPDIR)/libXar_a-matrix.Tpo" -c -o libXar_a-matrix.obj `if test -f '../Kernel/matrix.cpp'; then $(CYGPATH_W) '../Kernel/matrix.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/matrix.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-matrix.Tpo" "$(DEPDIR)/libXar_a-matrix.Po"; else rm -f "$(DEPDIR)/libXar_a-matrix.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/matrix.cpp' object='libXar_a-matrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-matrix.obj `if test -f '../Kernel/matrix.cpp'; then $(CYGPATH_W) '../Kernel/matrix.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/matrix.cpp'; fi`

libXar_a-pathproc.o: ../Kernel/pathproc.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-pathproc.o -MD -MP -MF "$(DEPDIR)/libXar_a-pathproc.Tpo" -c -o libXar_a-pathproc.o `test -f '../Kernel/pathproc.cpp' || echo '$(srcdir)/'`../Kernel/pathproc.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-pathproc.Tpo" "$(DEPDIR)/libXar_a-pathproc.Po"; else rm -f "$(DEPDIR)/libXar_a-pathproc.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/pathproc.cpp' object='libXar_a-pathproc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-pathproc.o `test -f '../Kernel/pathproc.cpp' || echo '$(srcdir)/'`../Kernel/pathproc.cpp

libXar_a-pathproc.obj: ../Kernel/pathproc.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-pathproc.obj -MD -MP -MF "$(DEPDIR)/libXar_a-pathproc.Tpo" -c -o libXar_a-pathproc.obj `if test -f '../Kernel/pathproc.cpp'; then $(CYGPATH_W) '../Kernel/pathproc.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/pathproc.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-pathproc.Tpo" "$(DEPDIR)/libXar_a-pathproc.Po"; else rm -f "$(DEPDIR)/libXar_a-pathproc.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/pathproc.cpp' object='libXar_a-pathproc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-pathproc.obj `if test -f '../Kernel/pathproc.cpp'; then $(CYGPATH_W) '../Kernel/pathproc.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/pathproc.cpp'; fi`

libXar_a-paths.o: ../Kernel/paths.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-paths.o -MD -MP -MF "$(DEPDIR)/libXar_a-paths.Tpo" -c -o libXar_a-paths.o `test -f '../Kernel/paths.cpp' || echo '$(srcdir)/'`../Kernel/paths.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-paths.Tpo" "$(DEPDIR)/libXar_a-paths.Po"; else rm -f "$(DEPDIR)/libXar_a-paths.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/paths.cpp' object='libXar_a-paths.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-paths.o `test -f '../Kernel/paths.cpp' || echo '$(srcdir)/'`../Kernel/paths.cpp

libXar_a-paths.obj: ../Kernel/paths.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-paths.obj -MD -MP -MF "$(DEPDIR)/libXar_a-paths.Tpo" -c -o libXar_a-paths.obj `if test -f '../Kernel/paths.cpp'; then $(CYGPATH_W) '../Kernel/paths.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/paths.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-paths.Tpo" "$(DEPDIR)/libXar_a-paths.Po"; else rm -f "$(DEPDIR)/libXar_a-paths.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/paths.cpp' object='libXar_a-paths.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-paths.obj `if test -f '../Kernel/paths.cpp'; then $(CYGPATH_W) '../Kernel/paths.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/paths.cpp'; fi`

libXar_a-pathutil.o: ../Kernel/pathutil.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-pathutil.o -MD -MP -MF "$(DEPDIR)/libXar_a-pathutil.Tpo" -c -o libXar_a-pathutil.o `test -f '../Kernel/pathutil.cpp' || echo '$(srcdir)/'`../Kernel/pathutil.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-pathutil.Tpo" "$(DEPDIR)/libXar_a-pathutil.Po"; else rm -f "$(DEPDIR)/libXar_a-pathutil.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/pathutil.cpp' object='libXar_a-pathutil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-pathutil.o `test -f '../Kernel/pathutil.cpp' || echo '$(srcdir)/'`../Kernel/pathutil.cpp

libXar_a-pathutil.obj: ../Kernel/pathutil.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-pathutil.obj -MD -MP -MF "$(DEPDIR)/libXar_a-pathutil.Tpo" -c -o libXar_a-pathutil.obj `if test -f '../Kernel/pathutil.cpp'; then $(CYGPATH_W) '../Kernel/pathutil.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/pathutil.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-pathutil.Tpo" "$(DEPDIR)/libXar_a-pathutil.Po"; else rm -f "$(DEPDIR)/libXar_a-pathutil.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/pathutil.cpp' object='libXar_a-pathutil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-pathutil.obj `if test -f '../Kernel/pathutil.cpp'; then $(CYGPATH_W) '../Kernel/pathutil.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/pathutil.cpp'; fi`

libXar_a-rechcomp.o: ../Kernel/rechcomp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-rechcomp.o -MD -MP -MF "$(DEPDIR)/libXar_a-rechcomp.Tpo" -c -o libXar_a-rechcomp.o `test -f '../Kernel/rechcomp.cpp' || echo '$(srcdir)/'`../Kernel/rechcomp.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-rechcomp.Tpo" "$(DEPDIR)/libXar_a-rechcomp.Po"; else rm -f "$(DEPDIR)/libXar_a-rechcomp.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/rechcomp.cpp' object='libXar_a-rechcomp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-rechcomp.o `test -f '../Kernel/rechcomp.cpp' || echo '$(srcdir)/'`../Kernel/rechcomp.cpp

libXar_a-rechcomp.obj: ../Kernel/rechcomp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-rechcomp.obj -MD -MP -MF "$(DEPDIR)/libXar_a-rechcomp.Tpo" -c -o libXar_a-rechcomp.obj `if test -f '../Kernel/rechcomp.cpp'; then $(CYGPATH_W) '../Kernel/rechcomp.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/rechcomp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-rechcomp.Tpo" "$(DEPDIR)/libXar_a-rechcomp.Po"; else rm -f "$(DEPDIR)/libXar_a-rechcomp.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/rechcomp.cpp' object='libXar_a-rechcomp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-rechcomp.obj `if test -f '../Kernel/rechcomp.cpp'; then $(CYGPATH_W) '../Kernel/rechcomp.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/rechcomp.cpp'; fi`

libXar_a-vector.o: ../Kernel/vector.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-vector.o -MD -MP -MF "$(DEPDIR)/libXar_a-vector.Tpo" -c -o libXar_a-vector.o `test -f '../Kernel/vector.cpp' || echo '$(srcdir)/'`../Kernel/vector.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-vector.Tpo" "$(DEPDIR)/libXar_a-vector.Po"; else rm -f "$(DEPDIR)/libXar_a-vector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/vector.cpp' object='libXar_a-vector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-vector.o `test -f '../Kernel/vector.cpp' || echo '$(srcdir)/'`../Kernel/vector.cpp

libXar_a-vector.obj: ../Kernel/vector.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-vector.obj -MD -MP -MF "$(DEPDIR)/libXar_a-vector.Tpo" -c -o libXar_a-vector.obj `if test -f '../Kernel/vector.cpp'; then $(CYGPATH_W) '../Kernel/vector.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/vector.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-vector.Tpo" "$(DEPDIR)/libXar_a-vector.Po"; else rm -f "$(DEPDIR)/libXar_a-vector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/vector.cpp' object='libXar_a-vector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-vector.obj `if test -f '../Kernel/vector.cpp'; then $(CYGPATH_W) '../Kernel/vector.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/vector.cpp'; fi`

libXar_a-xlong.o: ../Kernel/xlong.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-xlong.o -MD -MP -MF "$(DEPDIR)/libXar_a-xlong.Tpo" -c -o libXar_a-xlong.o `test -f '../Kernel/xlong.cpp' || echo '$(srcdir)/'`../Kernel/xlong.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-xlong.Tpo" "$(DEPDIR)/libXar_a-xlong.Po"; else rm -f "$(DEPDIR)/libXar_a-xlong.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/xlong.cpp' object='libXar_a-xlong.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-xlong.o `test -f '../Kernel/xlong.cpp' || echo '$(srcdir)/'`../Kernel/xlong.cpp

libXar_a-xlong.obj: ../Kernel/xlong.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-xlong.obj -MD -MP -MF "$(DEPDIR)/libXar_a-xlong.Tpo" -c -o libXar_a-xlong.obj `if test -f '../Kernel/xlong.cpp'; then $(CYGPATH_W) '../Kernel/xlong.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/xlong.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-xlong.Tpo" "$(DEPDIR)/libXar_a-xlong.Po"; else rm -f "$(DEPDIR)/libXar_a-xlong.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/xlong.cpp' object='libXar_a-xlong.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-xlong.obj `if test -f '../Kernel/xlong.cpp'; then $(CYGPATH_W) '../Kernel/xlong.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/xlong.cpp'; fi`

libXar_a-zdeflate.o: ../Kernel/zdeflate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-zdeflate.o -MD -MP -MF "$(DEPDIR)/libXar_a-zdeflate.Tpo" -c -o libXar_a-zdeflate.o `test -f '../Kernel/zdeflate.cpp' || echo '$(srcdir)/'`../Kernel/zdeflate.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-zdeflate.Tpo" "$(DEPDIR)/libXar_a-zdeflate.Po"; else rm -f "$(DEPDIR)/libXar_a-zdeflate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/zdeflate.cpp' object='libXar_a-zdeflate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-zdeflate.o `test -f '../Kernel/zdeflate.cpp' || echo '$(srcdir)/'`../Kernel/zdeflate.cpp

libXar_a-zdeflate.obj: ../Kernel/zdeflate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-zdeflate.obj -MD -MP -MF "$(DEPDIR)/libXar_a-zdeflate.Tpo" -c -o libXar_a-zdeflate.obj `if test -f '../Kernel/zdeflate.cpp'; then $(CYGPATH_W) '../Kernel/zdeflate.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/zdeflate.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-zdeflate.Tpo" "$(DEPDIR)/libXar_a-zdeflate.Po"; else rm -f "$(DEPDIR)/libXar_a-zdeflate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/zdeflate.cpp' object='libXar_a-zdeflate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-zdeflate.obj `if test -f '../Kernel/zdeflate.cpp'; then $(CYGPATH_W) '../Kernel/zdeflate.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/zdeflate.cpp'; fi`

libXar_a-zdftrees.o: ../Kernel/zdftrees.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-zdftrees.o -MD -MP -MF "$(DEPDIR)/libXar_a-zdftrees.Tpo" -c -o libXar_a-zdftrees.o `test -f '../Kernel/zdftrees.cpp' || echo '$(srcdir)/'`../Kernel/zdftrees.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-zdftrees.Tpo" "$(DEPDIR)/libXar_a-zdftrees.Po"; else rm -f "$(DEPDIR)/libXar_a-zdftrees.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/zdftrees.cpp' object='libXar_a-zdftrees.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-zdftrees.o `test -f '../Kernel/zdftrees.cpp' || echo '$(srcdir)/'`../Kernel/zdftrees.cpp

libXar_a-zdftrees.obj: ../Kernel/zdftrees.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-zdftrees.obj -MD -MP -MF "$(DEPDIR)/libXar_a-zdftrees.Tpo" -c -o libXar_a-zdftrees.obj `if test -f '../Kernel/zdftrees.cpp'; then $(CYGPATH_W) '../Kernel/zdftrees.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/zdftrees.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-zdftrees.Tpo" "$(DEPDIR)/libXar_a-zdftrees.Po"; else rm -f "$(DEPDIR)/libXar_a-zdftrees.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/zdftrees.cpp' object='libXar_a-zdftrees.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-zdftrees.obj `if test -f '../Kernel/zdftrees.cpp'; then $(CYGPATH_W) '../Kernel/zdftrees.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/zdftrees.cpp'; fi`

libXar_a-ziftrees.o: ../Kernel/ziftrees.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-ziftrees.o -MD -MP -MF "$(DEPDIR)/libXar_a-ziftrees.Tpo" -c -o libXar_a-ziftrees.o `test -f '../Kernel/ziftrees.cpp' || echo '$(srcdir)/'`../Kernel/ziftrees.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-ziftrees.Tpo" "$(DEPDIR)/libXar_a-ziftrees.Po"; else rm -f "$(DEPDIR)/libXar_a-ziftrees.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/ziftrees.cpp' object='libXar_a-ziftrees.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-ziftrees.o `test -f '../Kernel/ziftrees.cpp' || echo '$(srcdir)/'`../Kernel/ziftrees.cpp

libXar_a-ziftrees.obj: ../Kernel/ziftrees.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-ziftrees.obj -MD -MP -MF "$(DEPDIR)/libXar_a-ziftrees.Tpo" -c -o libXar_a-ziftrees.obj `if test -f '../Kernel/ziftrees.cpp'; then $(CYGPATH_W) '../Kernel/ziftrees.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/ziftrees.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-ziftrees.Tpo" "$(DEPDIR)/libXar_a-ziftrees.Po"; else rm -f "$(DEPDIR)/libXar_a-ziftrees.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/ziftrees.cpp' object='libXar_a-ziftrees.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-ziftrees.obj `if test -f '../Kernel/ziftrees.cpp'; then $(CYGPATH_W) '../Kernel/ziftrees.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/ziftrees.cpp'; fi`

libXar_a-zinflate.o: ../Kernel/zinflate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-zinflate.o -MD -MP -MF "$(DEPDIR)/libXar_a-zinflate.Tpo" -c -o libXar_a-zinflate.o `test -f '../Kernel/zinflate.cpp' || echo '$(srcdir)/'`../Kernel/zinflate.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-zinflate.Tpo" "$(DEPDIR)/libXar_a-zinflate.Po"; else rm -f "$(DEPDIR)/libXar_a-zinflate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/zinflate.cpp' object='libXar_a-zinflate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-zinflate.o `test -f '../Kernel/zinflate.cpp' || echo '$(srcdir)/'`../Kernel/zinflate.cpp

libXar_a-zinflate.obj: ../Kernel/zinflate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-zinflate.obj -MD -MP -MF "$(DEPDIR)/libXar_a-zinflate.Tpo" -c -o libXar_a-zinflate.obj `if test -f '../Kernel/zinflate.cpp'; then $(CYGPATH_W) '../Kernel/zinflate.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/zinflate.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-zinflate.Tpo" "$(DEPDIR)/libXar_a-zinflate.Po"; else rm -f "$(DEPDIR)/libXar_a-zinflate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/zinflate.cpp' object='libXar_a-zinflate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-zinflate.obj `if test -f '../Kernel/zinflate.cpp'; then $(CYGPATH_W) '../Kernel/zinflate.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/zinflate.cpp'; fi`

libXar_a-zstream.o: ../Kernel/zstream.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-zstream.o -MD -MP -MF "$(DEPDIR)/libXar_a-zstream.Tpo" -c -o libXar_a-zstream.o `test -f '../Kernel/zstream.cpp' || echo '$(srcdir)/'`../Kernel/zstream.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-zstream.Tpo" "$(DEPDIR)/libXar_a-zstream.Po"; else rm -f "$(DEPDIR)/libXar_a-zstream.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/zstream.cpp' object='libXar_a-zstream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-zstream.o `test -f '../Kernel/zstream.cpp' || echo '$(srcdir)/'`../Kernel/zstream.cpp

libXar_a-zstream.obj: ../Kernel/zstream.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-zstream.obj -MD -MP -MF "$(DEPDIR)/libXar_a-zstream.Tpo" -c -o libXar_a-zstream.obj `if test -f '../Kernel/zstream.cpp'; then $(CYGPATH_W) '../Kernel/zstream.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/zstream.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-zstream.Tpo" "$(DEPDIR)/libXar_a-zstream.Po"; else rm -f "$(DEPDIR)/libXar_a-zstream.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Kernel/zstream.cpp' object='libXar_a-zstream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-zstream.obj `if test -f '../Kernel/zstream.cpp'; then $(CYGPATH_W) '../Kernel/zstream.cpp'; else $(CYGPATH_W) '$(srcdir)/../Kernel/zstream.cpp'; fi`

libXar_a-basestr.o: ../wxOil/basestr.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-basestr.o -MD -MP -MF "$(DEPDIR)/libXar_a-basestr.Tpo" -c -o libXar_a-basestr.o `test -f '../wxOil/basestr.cpp' || echo '$(srcdir)/'`../wxOil/basestr.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-basestr.Tpo" "$(DEPDIR)/libXar_a-basestr.Po"; else rm -f "$(DEPDIR)/libXar_a-basestr.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/basestr.cpp' object='libXar_a-basestr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-basestr.o `test -f '../wxOil/basestr.cpp' || echo '$(srcdir)/'`../wxOil/basestr.cpp

libXar_a-basestr.obj: ../wxOil/basestr.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-basestr.obj -MD -MP -MF "$(DEPDIR)/libXar_a-basestr.Tpo" -c -o libXar_a-basestr.obj `if test -f '../wxOil/basestr.cpp'; then $(CYGPATH_W) '../wxOil/basestr.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/basestr.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-basestr.Tpo" "$(DEPDIR)/libXar_a-basestr.Po"; else rm -f "$(DEPDIR)/libXar_a-basestr.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/basestr.cpp' object='libXar_a-basestr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-basestr.obj `if test -f '../wxOil/basestr.cpp'; then $(CYGPATH_W) '../wxOil/basestr.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/basestr.cpp'; fi`

libXar_a-camresource.o: ../wxOil/camresource.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-camresource.o -MD -MP -MF "$(DEPDIR)/libXar_a-camresource.Tpo" -c -o libXar_a-camresource.o `test -f '../wxOil/camresource.cpp' || echo '$(srcdir)/'`../wxOil/camresource.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-camresource.Tpo" "$(DEPDIR)/libXar_a-camresource.Po"; else rm -f "$(DEPDIR)/libXar_a-camresource.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/camresource.cpp' object='libXar_a-camresource.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-camresource.o `test -f '../wxOil/camresource.cpp' || echo '$(srcdir)/'`../wxOil/camresource.cpp

libXar_a-camresource.obj: ../wxOil/camresource.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-camresource.obj -MD -MP -MF "$(DEPDIR)/libXar_a-camresource.Tpo" -c -o libXar_a-camresource.obj `if test -f '../wxOil/camresource.cpp'; then $(CYGPATH_W) '../wxOil/camresource.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/camresource.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-camresource.Tpo" "$(DEPDIR)/libXar_a-camresource.Po"; else rm -f "$(DEPDIR)/libXar_a-camresource.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/camresource.cpp' object='libXar_a-camresource.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-camresource.obj `if test -f '../wxOil/camresource.cpp'; then $(CYGPATH_W) '../wxOil/camresource.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/camresource.cpp'; fi`

libXar_a-ccobject.o: ../wxOil/ccobject.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-ccobject.o -MD -MP -MF "$(DEPDIR)/libXar_a-ccobject.Tpo" -c -o libXar_a-ccobject.o `test -f '../wxOil/ccobject.cpp' || echo '$(srcdir)/'`../wxOil/ccobject.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-ccobject.Tpo" "$(DEPDIR)/libXar_a-ccobject.Po"; else rm -f "$(DEPDIR)/libXar_a-ccobject.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/ccobject.cpp' object='libXar_a-ccobject.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-ccobject.o `test -f '../wxOil/ccobject.cpp' || echo '$(srcdir)/'`../wxOil/ccobject.cpp

libXar_a-ccobject.obj: ../wxOil/ccobject.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-ccobject.obj -MD -MP -MF "$(DEPDIR)/libXar_a-ccobject.Tpo" -c -o libXar_a-ccobject.obj `if test -f '../wxOil/ccobject.cpp'; then $(CYGPATH_W) '../wxOil/ccobject.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/ccobject.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-ccobject.Tpo" "$(DEPDIR)/libXar_a-ccobject.Po"; else rm -f "$(DEPDIR)/libXar_a-ccobject.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/ccobject.cpp' object='libXar_a-ccobject.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-ccobject.obj `if test -f '../wxOil/ccobject.cpp'; then $(CYGPATH_W) '../wxOil/ccobject.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/ccobject.cpp'; fi`

libXar_a-errors.o: ../wxOil/errors.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-errors.o -MD -MP -MF "$(DEPDIR)/libXar_a-errors.Tpo" -c -o libXar_a-errors.o `test -f '../wxOil/errors.cpp' || echo '$(srcdir)/'`../wxOil/errors.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-errors.Tpo" "$(DEPDIR)/libXar_a-errors.Po"; else rm -f "$(DEPDIR)/libXar_a-errors.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/errors.cpp' object='libXar_a-errors.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-errors.o `test -f '../wxOil/errors.cpp' || echo '$(srcdir)/'`../wxOil/errors.cpp

libXar_a-errors.obj: ../wxOil/errors.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-errors.obj -MD -MP -MF "$(DEPDIR)/libXar_a-errors.Tpo" -c -o libXar_a-errors.obj `if test -f '../wxOil/errors.cpp'; then $(CYGPATH_W) '../wxOil/errors.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/errors.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-errors.Tpo" "$(DEPDIR)/libXar_a-errors.Po"; else rm -f "$(DEPDIR)/libXar_a-errors.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/errors.cpp' object='libXar_a-errors.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-errors.obj `if test -f '../wxOil/errors.cpp'; then $(CYGPATH_W) '../wxOil/errors.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/errors.cpp'; fi`

libXar_a-filehndl.o: ../wxOil/filehndl.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-filehndl.o -MD -MP -MF "$(DEPDIR)/libXar_a-filehndl.Tpo" -c -o libXar_a-filehndl.o `test -f '../wxOil/filehndl.cpp' || echo '$(srcdir)/'`../wxOil/filehndl.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-filehndl.Tpo" "$(DEPDIR)/libXar_a-filehndl.Po"; else rm -f "$(DEPDIR)/libXar_a-filehndl.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/filehndl.cpp' object='libXar_a-filehndl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-filehndl.o `test -f '../wxOil/filehndl.cpp' || echo '$(srcdir)/'`../wxOil/filehndl.cpp

libXar_a-filehndl.obj: ../wxOil/filehndl.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-filehndl.obj -MD -MP -MF "$(DEPDIR)/libXar_a-filehndl.Tpo" -c -o libXar_a-filehndl.obj `if test -f '../wxOil/filehndl.cpp'; then $(CYGPATH_W) '../wxOil/filehndl.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/filehndl.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-filehndl.Tpo" "$(DEPDIR)/libXar_a-filehndl.Po"; else rm -f "$(DEPDIR)/libXar_a-filehndl.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/filehndl.cpp' object='libXar_a-filehndl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-filehndl.obj `if test -f '../wxOil/filehndl.cpp'; then $(CYGPATH_W) '../wxOil/filehndl.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/filehndl.cpp'; fi`

libXar_a-filesize.o: ../wxOil/filesize.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-filesize.o -MD -MP -MF "$(DEPDIR)/libXar_a-filesize.Tpo" -c -o libXar_a-filesize.o `test -f '../wxOil/filesize.cpp' || echo '$(srcdir)/'`../wxOil/filesize.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-filesize.Tpo" "$(DEPDIR)/libXar_a-filesize.Po"; else rm -f "$(DEPDIR)/libXar_a-filesize.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/filesize.cpp' object='libXar_a-filesize.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-filesize.o `test -f '../wxOil/filesize.cpp' || echo '$(srcdir)/'`../wxOil/filesize.cpp

libXar_a-filesize.obj: ../wxOil/filesize.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-filesize.obj -MD -MP -MF "$(DEPDIR)/libXar_a-filesize.Tpo" -c -o libXar_a-filesize.obj `if test -f '../wxOil/filesize.cpp'; then $(CYGPATH_W) '../wxOil/filesize.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/filesize.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-filesize.Tpo" "$(DEPDIR)/libXar_a-filesize.Po"; else rm -f "$(DEPDIR)/libXar_a-filesize.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/filesize.cpp' object='libXar_a-filesize.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-filesize.obj `if test -f '../wxOil/filesize.cpp'; then $(CYGPATH_W) '../wxOil/filesize.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/filesize.cpp'; fi`

libXar_a-fixmem.o: ../wxOil/fixmem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixmem.o -MD -MP -MF "$(DEPDIR)/libXar_a-fixmem.Tpo" -c -o libXar_a-fixmem.o `test -f '../wxOil/fixmem.cpp' || echo '$(srcdir)/'`../wxOil/fixmem.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixmem.Tpo" "$(DEPDIR)/libXar_a-fixmem.Po"; else rm -f "$(DEPDIR)/libXar_a-fixmem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/fixmem.cpp' object='libXar_a-fixmem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixmem.o `test -f '../wxOil/fixmem.cpp' || echo '$(srcdir)/'`../wxOil/fixmem.cpp

libXar_a-fixmem.obj: ../wxOil/fixmem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixmem.obj -MD -MP -MF "$(DEPDIR)/libXar_a-fixmem.Tpo" -c -o libXar_a-fixmem.obj `if test -f '../wxOil/fixmem.cpp'; then $(CYGPATH_W) '../wxOil/fixmem.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/fixmem.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixmem.Tpo" "$(DEPDIR)/libXar_a-fixmem.Po"; else rm -f "$(DEPDIR)/libXar_a-fixmem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/fixmem.cpp' object='libXar_a-fixmem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixmem.obj `if test -f '../wxOil/fixmem.cpp'; then $(CYGPATH_W) '../wxOil/fixmem.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/fixmem.cpp'; fi`

libXar_a-fixst128.o: ../wxOil/fixst128.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixst128.o -MD -MP -MF "$(DEPDIR)/libXar_a-fixst128.Tpo" -c -o libXar_a-fixst128.o `test -f '../wxOil/fixst128.cpp' || echo '$(srcdir)/'`../wxOil/fixst128.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixst128.Tpo" "$(DEPDIR)/libXar_a-fixst128.Po"; else rm -f "$(DEPDIR)/libXar_a-fixst128.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/fixst128.cpp' object='libXar_a-fixst128.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixst128.o `test -f '../wxOil/fixst128.cpp' || echo '$(srcdir)/'`../wxOil/fixst128.cpp

libXar_a-fixst128.obj: ../wxOil/fixst128.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixst128.obj -MD -MP -MF "$(DEPDIR)/libXar_a-fixst128.Tpo" -c -o libXar_a-fixst128.obj `if test -f '../wxOil/fixst128.cpp'; then $(CYGPATH_W) '../wxOil/fixst128.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/fixst128.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixst128.Tpo" "$(DEPDIR)/libXar_a-fixst128.Po"; else rm -f "$(DEPDIR)/libXar_a-fixst128.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/fixst128.cpp' object='libXar_a-fixst128.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixst128.obj `if test -f '../wxOil/fixst128.cpp'; then $(CYGPATH_W) '../wxOil/fixst128.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/fixst128.cpp'; fi`

libXar_a-fixst256.o: ../wxOil/fixst256.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixst256.o -MD -MP -MF "$(DEPDIR)/libXar_a-fixst256.Tpo" -c -o libXar_a-fixst256.o `test -f '../wxOil/fixst256.cpp' || echo '$(srcdir)/'`../wxOil/fixst256.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixst256.Tpo" "$(DEPDIR)/libXar_a-fixst256.Po"; else rm -f "$(DEPDIR)/libXar_a-fixst256.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/fixst256.cpp' object='libXar_a-fixst256.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixst256.o `test -f '../wxOil/fixst256.cpp' || echo '$(srcdir)/'`../wxOil/fixst256.cpp

libXar_a-fixst256.obj: ../wxOil/fixst256.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixst256.obj -MD -MP -MF "$(DEPDIR)/libXar_a-fixst256.Tpo" -c -o libXar_a-fixst256.obj `if test -f '../wxOil/fixst256.cpp'; then $(CYGPATH_W) '../wxOil/fixst256.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/fixst256.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixst256.Tpo" "$(DEPDIR)/libXar_a-fixst256.Po"; else rm -f "$(DEPDIR)/libXar_a-fixst256.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/fixst256.cpp' object='libXar_a-fixst256.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixst256.obj `if test -f '../wxOil/fixst256.cpp'; then $(CYGPATH_W) '../wxOil/fixst256.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/fixst256.cpp'; fi`

libXar_a-fixstr16.o: ../wxOil/fixstr16.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixstr16.o -MD -MP -MF "$(DEPDIR)/libXar_a-fixstr16.Tpo" -c -o libXar_a-fixstr16.o `test -f '../wxOil/fixstr16.cpp' || echo '$(srcdir)/'`../wxOil/fixstr16.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixstr16.Tpo" "$(DEPDIR)/libXar_a-fixstr16.Po"; else rm -f "$(DEPDIR)/libXar_a-fixstr16.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/fixstr16.cpp' object='libXar_a-fixstr16.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixstr16.o `test -f '../wxOil/fixstr16.cpp' || echo '$(srcdir)/'`../wxOil/fixstr16.cpp

libXar_a-fixstr16.obj: ../wxOil/fixstr16.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixstr16.obj -MD -MP -MF "$(DEPDIR)/libXar_a-fixstr16.Tpo" -c -o libXar_a-fixstr16.obj `if test -f '../wxOil/fixstr16.cpp'; then $(CYGPATH_W) '../wxOil/fixstr16.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/fixstr16.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixstr16.Tpo" "$(DEPDIR)/libXar_a-fixstr16.Po"; else rm -f "$(DEPDIR)/libXar_a-fixstr16.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/fixstr16.cpp' object='libXar_a-fixstr16.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixstr16.obj `if test -f '../wxOil/fixstr16.cpp'; then $(CYGPATH_W) '../wxOil/fixstr16.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/fixstr16.cpp'; fi`

libXar_a-fixstr32.o: ../wxOil/fixstr32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixstr32.o -MD -MP -MF "$(DEPDIR)/libXar_a-fixstr32.Tpo" -c -o libXar_a-fixstr32.o `test -f '../wxOil/fixstr32.cpp' || echo '$(srcdir)/'`../wxOil/fixstr32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixstr32.Tpo" "$(DEPDIR)/libXar_a-fixstr32.Po"; else rm -f "$(DEPDIR)/libXar_a-fixstr32.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/fixstr32.cpp' object='libXar_a-fixstr32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixstr32.o `test -f '../wxOil/fixstr32.cpp' || echo '$(srcdir)/'`../wxOil/fixstr32.cpp

libXar_a-fixstr32.obj: ../wxOil/fixstr32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixstr32.obj -MD -MP -MF "$(DEPDIR)/libXar_a-fixstr32.Tpo" -c -o libXar_a-fixstr32.obj `if test -f '../wxOil/fixstr32.cpp'; then $(CYGPATH_W) '../wxOil/fixstr32.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/fixstr32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixstr32.Tpo" "$(DEPDIR)/libXar_a-fixstr32.Po"; else rm -f "$(DEPDIR)/libXar_a-fixstr32.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/fixstr32.cpp' object='libXar_a-fixstr32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixstr32.obj `if test -f '../wxOil/fixstr32.cpp'; then $(CYGPATH_W) '../wxOil/fixstr32.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/fixstr32.cpp'; fi`

libXar_a-fixstr64.o: ../wxOil/fixstr64.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixstr64.o -MD -MP -MF "$(DEPDIR)/libXar_a-fixstr64.Tpo" -c -o libXar_a-fixstr64.o `test -f '../wxOil/fixstr64.cpp' || echo '$(srcdir)/'`../wxOil/fixstr64.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixstr64.Tpo" "$(DEPDIR)/libXar_a-fixstr64.Po"; else rm -f "$(DEPDIR)/libXar_a-fixstr64.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/fixstr64.cpp' object='libXar_a-fixstr64.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixstr64.o `test -f '../wxOil/fixstr64.cpp' || echo '$(srcdir)/'`../wxOil/fixstr64.cpp

libXar_a-fixstr64.obj: ../wxOil/fixstr64.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixstr64.obj -MD -MP -MF "$(DEPDIR)/libXar_a-fixstr64.Tpo" -c -o libXar_a-fixstr64.obj `if test -f '../wxOil/fixstr64.cpp'; then $(CYGPATH_W) '../wxOil/fixstr64.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/fixstr64.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixstr64.Tpo" "$(DEPDIR)/libXar_a-fixstr64.Po"; else rm -f "$(DEPDIR)/libXar_a-fixstr64.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/fixstr64.cpp' object='libXar_a-fixstr64.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixstr64.obj `if test -f '../wxOil/fixstr64.cpp'; then $(CYGPATH_W) '../wxOil/fixstr64.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/fixstr64.cpp'; fi`

libXar_a-fixstr8.o: ../wxOil/fixstr8.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixstr8.o -MD -MP -MF "$(DEPDIR)/libXar_a-fixstr8.Tpo" -c -o libXar_a-fixstr8.o `test -f '../wxOil/fixstr8.cpp' || echo '$(srcdir)/'`../wxOil/fixstr8.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixstr8.Tpo" "$(DEPDIR)/libXar_a-fixstr8.Po"; else rm -f "$(DEPDIR)/libXar_a-fixstr8.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/fixstr8.cpp' object='libXar_a-fixstr8.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixstr8.o `test -f '../wxOil/fixstr8.cpp' || echo '$(srcdir)/'`../wxOil/fixstr8.cpp

libXar_a-fixstr8.obj: ../wxOil/fixstr8.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-fixstr8.obj -MD -MP -MF "$(DEPDIR)/libXar_a-fixstr8.Tpo" -c -o libXar_a-fixstr8.obj `if test -f '../wxOil/fixstr8.cpp'; then $(CYGPATH_W) '../wxOil/fixstr8.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/fixstr8.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-fixstr8.Tpo" "$(DEPDIR)/libXar_a-fixstr8.Po"; else rm -f "$(DEPDIR)/libXar_a-fixstr8.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/fixstr8.cpp' object='libXar_a-fixstr8.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-fixstr8.obj `if test -f '../wxOil/fixstr8.cpp'; then $(CYGPATH_W) '../wxOil/fixstr8.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/fixstr8.cpp'; fi`

libXar_a-handles.o: ../wxOil/handles.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-handles.o -MD -MP -MF "$(DEPDIR)/libXar_a-handles.Tpo" -c -o libXar_a-handles.o `test -f '../wxOil/handles.cpp' || echo '$(srcdir)/'`../wxOil/handles.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-handles.Tpo" "$(DEPDIR)/libXar_a-handles.Po"; else rm -f "$(DEPDIR)/libXar_a-handles.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/handles.cpp' object='libXar_a-handles.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-handles.o `test -f '../wxOil/handles.cpp' || echo '$(srcdir)/'`../wxOil/handles.cpp

libXar_a-handles.obj: ../wxOil/handles.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-handles.obj -MD -MP -MF "$(DEPDIR)/libXar_a-handles.Tpo" -c -o libXar_a-handles.obj `if test -f '../wxOil/handles.cpp'; then $(CYGPATH_W) '../wxOil/handles.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/handles.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-handles.Tpo" "$(DEPDIR)/libXar_a-handles.Po"; else rm -f "$(DEPDIR)/libXar_a-handles.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/handles.cpp' object='libXar_a-handles.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-handles.obj `if test -f '../wxOil/handles.cpp'; then $(CYGPATH_W) '../wxOil/handles.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/handles.cpp'; fi`

libXar_a-makemsg.o: ../wxOil/makemsg.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-makemsg.o -MD -MP -MF "$(DEPDIR)/libXar_a-makemsg.Tpo" -c -o libXar_a-makemsg.o `test -f '../wxOil/makemsg.cpp' || echo '$(srcdir)/'`../wxOil/makemsg.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-makemsg.Tpo" "$(DEPDIR)/libXar_a-makemsg.Po"; else rm -f "$(DEPDIR)/libXar_a-makemsg.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/makemsg.cpp' object='libXar_a-makemsg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-makemsg.o `test -f '../wxOil/makemsg.cpp' || echo '$(srcdir)/'`../wxOil/makemsg.cpp

libXar_a-makemsg.obj: ../wxOil/makemsg.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-makemsg.obj -MD -MP -MF "$(DEPDIR)/libXar_a-makemsg.Tpo" -c -o libXar_a-makemsg.obj `if test -f '../wxOil/makemsg.cpp'; then $(CYGPATH_W) '../wxOil/makemsg.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/makemsg.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-makemsg.Tpo" "$(DEPDIR)/libXar_a-makemsg.Po"; else rm -f "$(DEPDIR)/libXar_a-makemsg.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/makemsg.cpp' object='libXar_a-makemsg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-makemsg.obj `if test -f '../wxOil/makemsg.cpp'; then $(CYGPATH_W) '../wxOil/makemsg.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/makemsg.cpp'; fi`

libXar_a-memblk.o: ../wxOil/memblk.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-memblk.o -MD -MP -MF "$(DEPDIR)/libXar_a-memblk.Tpo" -c -o libXar_a-memblk.o `test -f '../wxOil/memblk.cpp' || echo '$(srcdir)/'`../wxOil/memblk.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-memblk.Tpo" "$(DEPDIR)/libXar_a-memblk.Po"; else rm -f "$(DEPDIR)/libXar_a-memblk.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/memblk.cpp' object='libXar_a-memblk.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-memblk.o `test -f '../wxOil/memblk.cpp' || echo '$(srcdir)/'`../wxOil/memblk.cpp

libXar_a-memblk.obj: ../wxOil/memblk.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-memblk.obj -MD -MP -MF "$(DEPDIR)/libXar_a-memblk.Tpo" -c -o libXar_a-memblk.obj `if test -f '../wxOil/memblk.cpp'; then $(CYGPATH_W) '../wxOil/memblk.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/memblk.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-memblk.Tpo" "$(DEPDIR)/libXar_a-memblk.Po"; else rm -f "$(DEPDIR)/libXar_a-memblk.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/memblk.cpp' object='libXar_a-memblk.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-memblk.obj `if test -f '../wxOil/memblk.cpp'; then $(CYGPATH_W) '../wxOil/memblk.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/memblk.cpp'; fi`

libXar_a-cammemory.o: ../wxOil/cammemory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-cammemory.o -MD -MP -MF "$(DEPDIR)/libXar_a-cammemory.Tpo" -c -o libXar_a-cammemory.o `test -f '../wxOil/cammemory.cpp' || echo '$(srcdir)/'`../wxOil/cammemory.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-cammemory.Tpo" "$(DEPDIR)/libXar_a-cammemory.Po"; else rm -f "$(DEPDIR)/libXar_a-cammemory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/cammemory.cpp' object='libXar_a-cammemory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-cammemory.o `test -f '../wxOil/cammemory.cpp' || echo '$(srcdir)/'`../wxOil/cammemory.cpp

libXar_a-cammemory.obj: ../wxOil/cammemory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-cammemory.obj -MD -MP -MF "$(DEPDIR)/libXar_a-cammemory.Tpo" -c -o libXar_a-cammemory.obj `if test -f '../wxOil/cammemory.cpp'; then $(CYGPATH_W) '../wxOil/cammemory.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/cammemory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-cammemory.Tpo" "$(DEPDIR)/libXar_a-cammemory.Po"; else rm -f "$(DEPDIR)/libXar_a-cammemory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/cammemory.cpp' object='libXar_a-cammemory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-cammemory.obj `if test -f '../wxOil/cammemory.cpp'; then $(CYGPATH_W) '../wxOil/cammemory.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/cammemory.cpp'; fi`

libXar_a-pathname.o: ../wxOil/pathname.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-pathname.o -MD -MP -MF "$(DEPDIR)/libXar_a-pathname.Tpo" -c -o libXar_a-pathname.o `test -f '../wxOil/pathname.cpp' || echo '$(srcdir)/'`../wxOil/pathname.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-pathname.Tpo" "$(DEPDIR)/libXar_a-pathname.Po"; else rm -f "$(DEPDIR)/libXar_a-pathname.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/pathname.cpp' object='libXar_a-pathname.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-pathname.o `test -f '../wxOil/pathname.cpp' || echo '$(srcdir)/'`../wxOil/pathname.cpp

libXar_a-pathname.obj: ../wxOil/pathname.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-pathname.obj -MD -MP -MF "$(DEPDIR)/libXar_a-pathname.Tpo" -c -o libXar_a-pathname.obj `if test -f '../wxOil/pathname.cpp'; then $(CYGPATH_W) '../wxOil/pathname.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/pathname.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-pathname.Tpo" "$(DEPDIR)/libXar_a-pathname.Po"; else rm -f "$(DEPDIR)/libXar_a-pathname.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/pathname.cpp' object='libXar_a-pathname.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-pathname.obj `if test -f '../wxOil/pathname.cpp'; then $(CYGPATH_W) '../wxOil/pathname.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/pathname.cpp'; fi`

libXar_a-unicdman.o: ../wxOil/unicdman.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-unicdman.o -MD -MP -MF "$(DEPDIR)/libXar_a-unicdman.Tpo" -c -o libXar_a-unicdman.o `test -f '../wxOil/unicdman.cpp' || echo '$(srcdir)/'`../wxOil/unicdman.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-unicdman.Tpo" "$(DEPDIR)/libXar_a-unicdman.Po"; else rm -f "$(DEPDIR)/libXar_a-unicdman.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/unicdman.cpp' object='libXar_a-unicdman.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-unicdman.o `test -f '../wxOil/unicdman.cpp' || echo '$(srcdir)/'`../wxOil/unicdman.cpp

libXar_a-unicdman.obj: ../wxOil/unicdman.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-unicdman.obj -MD -MP -MF "$(DEPDIR)/libXar_a-unicdman.Tpo" -c -o libXar_a-unicdman.obj `if test -f '../wxOil/unicdman.cpp'; then $(CYGPATH_W) '../wxOil/unicdman.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/unicdman.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-unicdman.Tpo" "$(DEPDIR)/libXar_a-unicdman.Po"; else rm -f "$(DEPDIR)/libXar_a-unicdman.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/unicdman.cpp' object='libXar_a-unicdman.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-unicdman.obj `if test -f '../wxOil/unicdman.cpp'; then $(CYGPATH_W) '../wxOil/unicdman.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/unicdman.cpp'; fi`

libXar_a-varstr.o: ../wxOil/varstr.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-varstr.o -MD -MP -MF "$(DEPDIR)/libXar_a-varstr.Tpo" -c -o libXar_a-varstr.o `test -f '../wxOil/varstr.cpp' || echo '$(srcdir)/'`../wxOil/varstr.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-varstr.Tpo" "$(DEPDIR)/libXar_a-varstr.Po"; else rm -f "$(DEPDIR)/libXar_a-varstr.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/varstr.cpp' object='libXar_a-varstr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-varstr.o `test -f '../wxOil/varstr.cpp' || echo '$(srcdir)/'`../wxOil/varstr.cpp

libXar_a-varstr.obj: ../wxOil/varstr.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-varstr.obj -MD -MP -MF "$(DEPDIR)/libXar_a-varstr.Tpo" -c -o libXar_a-varstr.obj `if test -f '../wxOil/varstr.cpp'; then $(CYGPATH_W) '../wxOil/varstr.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/varstr.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-varstr.Tpo" "$(DEPDIR)/libXar_a-varstr.Po"; else rm -f "$(DEPDIR)/libXar_a-varstr.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../wxOil/varstr.cpp' object='libXar_a-varstr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-varstr.obj `if test -f '../wxOil/varstr.cpp'; then $(CYGPATH_W) '../wxOil/varstr.cpp'; else $(CYGPATH_W) '$(srcdir)/../wxOil/varstr.cpp'; fi`

libXar_a-camelot.o: ../xarlib/camelot.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-camelot.o -MD -MP -MF "$(DEPDIR)/libXar_a-camelot.Tpo" -c -o libXar_a-camelot.o `test -f '../xarlib/camelot.cpp' || echo '$(srcdir)/'`../xarlib/camelot.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-camelot.Tpo" "$(DEPDIR)/libXar_a-camelot.Po"; else rm -f "$(DEPDIR)/libXar_a-camelot.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../xarlib/camelot.cpp' object='libXar_a-camelot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-camelot.o `test -f '../xarlib/camelot.cpp' || echo '$(srcdir)/'`../xarlib/camelot.cpp

libXar_a-camelot.obj: ../xarlib/camelot.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-camelot.obj -MD -MP -MF "$(DEPDIR)/libXar_a-camelot.Tpo" -c -o libXar_a-camelot.obj `if test -f '../xarlib/camelot.cpp'; then $(CYGPATH_W) '../xarlib/camelot.cpp'; else $(CYGPATH_W) '$(srcdir)/../xarlib/camelot.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-camelot.Tpo" "$(DEPDIR)/libXar_a-camelot.Po"; else rm -f "$(DEPDIR)/libXar_a-camelot.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../xarlib/camelot.cpp' object='libXar_a-camelot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-camelot.obj `if test -f '../xarlib/camelot.cpp'; then $(CYGPATH_W) '../xarlib/camelot.cpp'; else $(CYGPATH_W) '$(srcdir)/../xarlib/camelot.cpp'; fi`

libXar_a-ensure.o: ../xarlib/ensure.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-ensure.o -MD -MP -MF "$(DEPDIR)/libXar_a-ensure.Tpo" -c -o libXar_a-ensure.o `test -f '../xarlib/ensure.cpp' || echo '$(srcdir)/'`../xarlib/ensure.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-ensure.Tpo" "$(DEPDIR)/libXar_a-ensure.Po"; else rm -f "$(DEPDIR)/libXar_a-ensure.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../xarlib/ensure.cpp' object='libXar_a-ensure.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-ensure.o `test -f '../xarlib/ensure.cpp' || echo '$(srcdir)/'`../xarlib/ensure.cpp

libXar_a-ensure.obj: ../xarlib/ensure.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-ensure.obj -MD -MP -MF "$(DEPDIR)/libXar_a-ensure.Tpo" -c -o libXar_a-ensure.obj `if test -f '../xarlib/ensure.cpp'; then $(CYGPATH_W) '../xarlib/ensure.cpp'; else $(CYGPATH_W) '$(srcdir)/../xarlib/ensure.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-ensure.Tpo" "$(DEPDIR)/libXar_a-ensure.Po"; else rm -f "$(DEPDIR)/libXar_a-ensure.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../xarlib/ensure.cpp' object='libXar_a-ensure.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-ensure.obj `if test -f '../xarlib/ensure.cpp'; then $(CYGPATH_W) '../xarlib/ensure.cpp'; else $(CYGPATH_W) '$(srcdir)/../xarlib/ensure.cpp'; fi`

libXar_a-xarlib.o: ../xarlib/xarlib.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-xarlib.o -MD -MP -MF "$(DEPDIR)/libXar_a-xarlib.Tpo" -c -o libXar_a-xarlib.o `test -f '../xarlib/xarlib.cpp' || echo '$(srcdir)/'`../xarlib/xarlib.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-xarlib.Tpo" "$(DEPDIR)/libXar_a-xarlib.Po"; else rm -f "$(DEPDIR)/libXar_a-xarlib.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../xarlib/xarlib.cpp' object='libXar_a-xarlib.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-xarlib.o `test -f '../xarlib/xarlib.cpp' || echo '$(srcdir)/'`../xarlib/xarlib.cpp

libXar_a-xarlib.obj: ../xarlib/xarlib.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -MT libXar_a-xarlib.obj -MD -MP -MF "$(DEPDIR)/libXar_a-xarlib.Tpo" -c -o libXar_a-xarlib.obj `if test -f '../xarlib/xarlib.cpp'; then $(CYGPATH_W) '../xarlib/xarlib.cpp'; else $(CYGPATH_W) '$(srcdir)/../xarlib/xarlib.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libXar_a-xarlib.Tpo" "$(DEPDIR)/libXar_a-xarlib.Po"; else rm -f "$(DEPDIR)/libXar_a-xarlib.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../xarlib/xarlib.cpp' object='libXar_a-xarlib.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXar_a_CXXFLAGS) $(CXXFLAGS) -c -o libXar_a-xarlib.obj `if test -f '../xarlib/xarlib.cpp'; then $(CYGPATH_W) '../xarlib/xarlib.cpp'; else $(CYGPATH_W) '$(srcdir)/../xarlib/xarlib.cpp'; fi`

expandxar-expandxar.o: ExpandXar/expandxar.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(expandxar_CXXFLAGS) $(CXXFLAGS) -MT expandxar-expandxar.o -MD -MP -MF "$(DEPDIR)/expandxar-expandxar.Tpo" -c -o expandxar-expandxar.o `test -f 'ExpandXar/expandxar.cpp' || echo '$(srcdir)/'`ExpandXar/expandxar.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/expandxar-expandxar.Tpo" "$(DEPDIR)/expandxar-expandxar.Po"; else rm -f "$(DEPDIR)/expandxar-expandxar.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ExpandXar/expandxar.cpp' object='expandxar-expandxar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(expandxar_CXXFLAGS) $(CXXFLAGS) -c -o expandxar-expandxar.o `test -f 'ExpandXar/expandxar.cpp' || echo '$(srcdir)/'`ExpandXar/expandxar.cpp

expandxar-expandxar.obj: ExpandXar/expandxar.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(expandxar_CXXFLAGS) $(CXXFLAGS) -MT expandxar-expandxar.obj -MD -MP -MF "$(DEPDIR)/expandxar-expandxar.Tpo" -c -o expandxar-expandxar.obj `if test -f 'ExpandXar/expandxar.cpp'; then $(CYGPATH_W) 'ExpandXar/expandxar.cpp'; else $(CYGPATH_W) '$(srcdir)/ExpandXar/expandxar.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/expandxar-expandxar.Tpo" "$(DEPDIR)/expandxar-expandxar.Po"; else rm -f "$(DEPDIR)/expandxar-expandxar.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ExpandXar/expandxar.cpp' object='expandxar-expandxar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(expandxar_CXXFLAGS) $(CXXFLAGS) -c -o expandxar-expandxar.obj `if test -f 'ExpandXar/expandxar.cpp'; then $(CYGPATH_W) 'ExpandXar/expandxar.cpp'; else $(CYGPATH_W) '$(srcdir)/ExpandXar/expandxar.cpp'; fi`
uninstall-info-am:
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkgconfigdir)" || $(mkdir_p) "$(DESTDIR)$(pkgconfigdir)"
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pkgconfigDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgconfigdir)/$$f'"; \
	  $(pkgconfigDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgconfigdir)/$$f"; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkgconfigdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgconfigdir)/$$f"; \
	done
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(mkdir_p) "$(DESTDIR)$(pkgincludedir)"
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pkgincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  $(pkgincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/include/xarlib
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-pkgconfigDATA install-pkgincludeHEADERS

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLIBRARIES uninstall-pkgconfigDATA \
	uninstall-pkgincludeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLIBRARIES install-man install-pkgconfigDATA \
	install-pkgincludeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLIBRARIES uninstall-pkgconfigDATA \
	uninstall-pkgincludeHEADERS

#noinst_DATA = $(INSTHEADERS) $(INSTCPP)

# Generate a directory of includes which has "xarlib/" in the include path
$(INSTHEADERS) : $(XARLIBHEADERS)
	@mkdir -p include/xarlib && \
	j=xarlib/$(filter %/$(notdir $@), $(XARLIBHEADERS) ) && \
	s="$(if $(filter %/$(notdir $@),$(BUILTXARLIBHEADERS)),../$$j,$(TOPDIR)/$$j)" && \
	echo "Building xarlib header $@ from $$s" && \
	perl -pe 's,^[ \t]*#include[ \t]+\",#include \"xarlib/,' <$$s >$@ 

# We need svnversion.h in the output directory
svnversion.h : $(INSTHEADERS)
	@cp include/xarlib/svnversion.h svnversion.h

# Generate a directory of includes which has "xarlib/" in the include path
# We have to muck around with the prefixes here to avoid partial matches (coord.cpp matching doccoord.cpp etc.)
$(INSTCPP) : $(XARLIBCPP)
	@j=$(filter %/$(notdir $@), $(addprefix xarlib/, $(XARLIBCPP)) ) && \
	echo "Building xarlib CPP file $@ from $(TOPDIR)/$$j" && \
	ls -la $(TOPDIR)/$$j && \
	#perl -pe 's,^[ \t]*#include[ \t]+\",#include \"xarlib/,' <$(TOPDIR)/$$j >$@ 
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
